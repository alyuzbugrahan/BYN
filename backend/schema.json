{
    "openapi": "3.0.3",
    "info": {
        "title": "BYN API",
        "version": "1.0.0",
        "description": "Build Your Network - Professional Networking Platform API"
    },
    "paths": {
        "/api/auth/change-password/": {
            "put": {
                "operationId": "api_auth_change_password_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ChangePassword"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_auth_change_password_partial_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedChangePassword"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedChangePassword"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedChangePassword"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ChangePassword"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/login/": {
            "post": {
                "operationId": "api_auth_login_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogin"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogin"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/logout/": {
            "post": {
                "operationId": "api_auth_logout_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogout"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogout"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLogout"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserLogout"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/profile/": {
            "get": {
                "operationId": "api_auth_profile_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/register/": {
            "post": {
                "operationId": "api_auth_register_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegistration"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRegistration"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/auth/token/refresh/": {
            "post": {
                "operationId": "api_auth_token_refresh_create",
                "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/TokenRefresh"
                            }
                        }
                    },
                    "required": true
                },
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TokenRefresh"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/companies/": {
            "get": {
                "operationId": "api_companies_companies_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/companies/{company_id}/follow/": {
            "post": {
                "operationId": "api_companies_companies_follow_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyFollow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyFollow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CompanyFollow"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyFollow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/companies/{company_id}/stats/": {
            "get": {
                "operationId": "api_companies_companies_stats_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyStats"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/companies/{company_id}/unfollow/": {
            "delete": {
                "operationId": "api_companies_companies_unfollow_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "company_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/companies/companies/{id}/": {
            "get": {
                "operationId": "api_companies_companies_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CompanyDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/companies/my-companies/": {
            "get": {
                "operationId": "api_companies_companies_my_companies_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/filter-options/": {
            "get": {
                "operationId": "api_companies_filter_options_retrieve",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FilterOptions"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/followed/": {
            "get": {
                "operationId": "api_companies_followed_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/companies/trending/": {
            "get": {
                "operationId": "api_companies_trending_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCompanyList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/connections/": {
            "get": {
                "operationId": "api_connections_connections_list",
                "description": "List connections",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConnectionList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/connections/{id}/": {
            "get": {
                "operationId": "api_connections_connections_retrieve",
                "description": "Get a specific connection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Connection"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/connections/{id}/remove/": {
            "delete": {
                "operationId": "api_connections_connections_remove_destroy",
                "description": "Remove a connection",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/connections/follows/": {
            "get": {
                "operationId": "api_connections_follows_list",
                "description": "List follows",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFollowList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_connections_follows_create",
                "description": "Follow a user",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/follows/{id}/": {
            "get": {
                "operationId": "api_connections_follows_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this follow.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_connections_follows_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this follow.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Follow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_connections_follows_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this follow.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFollow"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFollow"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFollow"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_connections_follows_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this follow.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/connections/follows/followers/": {
            "get": {
                "operationId": "api_connections_follows_followers_retrieve",
                "description": "List followers",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/follows/following/": {
            "get": {
                "operationId": "api_connections_follows_following_retrieve",
                "description": "List following",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Follow"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/follows/unfollow/": {
            "delete": {
                "operationId": "api_connections_follows_unfollow_destroy",
                "description": "Unfollow a user",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/connections/metrics/": {
            "get": {
                "operationId": "api_connections_metrics_list",
                "description": "List network metrics",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNetworkMetricsList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/metrics/{id}/": {
            "get": {
                "operationId": "api_connections_metrics_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this network metrics.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/metrics/my_metrics/": {
            "get": {
                "operationId": "api_connections_metrics_my_metrics_retrieve",
                "description": "Get current user network metrics",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/NetworkMetrics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/recommendations/": {
            "get": {
                "operationId": "api_connections_recommendations_list",
                "description": "List user recommendations",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserRecommendationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/recommendations/{id}/": {
            "get": {
                "operationId": "api_connections_recommendations_retrieve",
                "description": "Get a specific recommendation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user recommendation.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRecommendation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/recommendations/{id}/dismiss/": {
            "post": {
                "operationId": "api_connections_recommendations_dismiss_create",
                "description": "Dismiss a recommendation",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user recommendation.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRecommendation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRecommendation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRecommendation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserRecommendation"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/requests/": {
            "get": {
                "operationId": "api_connections_requests_list",
                "description": "List connection requests",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedConnectionRequestList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_connections_requests_create",
                "description": "Create a connection request",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/requests/{id}/": {
            "get": {
                "operationId": "api_connections_requests_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_connections_requests_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_connections_requests_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedConnectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedConnectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedConnectionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_connections_requests_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/connections/requests/{id}/respond/": {
            "post": {
                "operationId": "api_connections_requests_respond_create",
                "description": "Accept or decline a connection request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ConnectionRequest"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/connections/requests/{id}/withdraw/": {
            "delete": {
                "operationId": "api_connections_requests_withdraw_destroy",
                "description": "Withdraw a connection request",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this connection request.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/analytics/stats/": {
            "get": {
                "operationId": "api_feed_analytics_stats_retrieve",
                "description": "Get feed statistics",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedStats"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/analytics/trending_topics/": {
            "get": {
                "operationId": "api_feed_analytics_trending_topics_retrieve",
                "description": "Get trending topics and hashtags",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/TrendingTopics"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/comments/": {
            "get": {
                "operationId": "api_feed_comments_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "author_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Author Name"
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "has_image",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Image"
                    },
                    {
                        "in": "query",
                        "name": "is_approved",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_reply",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Is Reply"
                    },
                    {
                        "in": "query",
                        "name": "is_reported",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_likes",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_replies",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_comment",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "post",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCommentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_feed_comments_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/comments/{id}/": {
            "get": {
                "operationId": "api_feed_comments_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_feed_comments_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_feed_comments_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedComment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedComment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedComment"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_feed_comments_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/comments/{id}/like/": {
            "post": {
                "operationId": "api_feed_comments_like_create",
                "description": "Like or unlike a comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Comment"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Comment"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_feed_comments_like_destroy",
                "description": "Like or unlike a comment",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this comment.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/feed-algorithm/": {
            "get": {
                "operationId": "api_feed_feed_algorithm_list",
                "description": "List feed algorithms",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedFeedAlgorithmList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_feed_feed_algorithm_create",
                "description": "Create a feed algorithm",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/feed-algorithm/{id}/": {
            "get": {
                "operationId": "api_feed_feed_algorithm_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this feed algorithm.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedAlgorithm"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_feed_feed_algorithm_update",
                "description": "Update a feed algorithm",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this feed algorithm.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_feed_feed_algorithm_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this feed algorithm.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFeedAlgorithmUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFeedAlgorithmUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedFeedAlgorithmUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/FeedAlgorithmUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_feed_feed_algorithm_destroy",
                "description": "Delete a feed algorithm",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this feed algorithm.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/hashtags/": {
            "get": {
                "operationId": "api_feed_hashtags_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedHashtagList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/hashtags/{id}/": {
            "get": {
                "operationId": "api_feed_hashtags_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this hashtag.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hashtag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/hashtags/{id}/posts/": {
            "get": {
                "operationId": "api_feed_hashtags_posts_retrieve",
                "description": "Get posts for a specific hashtag",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this hashtag.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hashtag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/hashtags/trending/": {
            "get": {
                "operationId": "api_feed_hashtags_trending_retrieve",
                "description": "Get trending hashtags",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Hashtag"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/notifications/": {
            "get": {
                "operationId": "api_feed_notifications_list",
                "description": "List notifications",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedNotificationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/notifications/{id}/": {
            "get": {
                "operationId": "api_feed_notifications_retrieve",
                "description": "Get a specific notification",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notification.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/notifications/{id}/mark_read/": {
            "post": {
                "operationId": "api_feed_notifications_mark_read_create",
                "description": "Mark a notification as read",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this notification.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/notifications/mark_all_read/": {
            "post": {
                "operationId": "api_feed_notifications_mark_all_read_create",
                "description": "Mark all notifications as read",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Notification"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/notifications/unread_count/": {
            "get": {
                "operationId": "api_feed_notifications_unread_count_retrieve",
                "description": "Get count of unread notifications",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Notification"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/": {
            "get": {
                "operationId": "api_feed_posts_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "author_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Author Name"
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_date",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "from_connections",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "From Connections"
                    },
                    {
                        "in": "query",
                        "name": "has_article",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Article Link"
                    },
                    {
                        "in": "query",
                        "name": "has_document",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Document"
                    },
                    {
                        "in": "query",
                        "name": "has_hashtags",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Hashtags"
                    },
                    {
                        "in": "query",
                        "name": "has_image",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Image"
                    },
                    {
                        "in": "query",
                        "name": "has_media",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Any Media"
                    },
                    {
                        "in": "query",
                        "name": "has_shared_job",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Shared Job"
                    },
                    {
                        "in": "query",
                        "name": "has_video",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Video"
                    },
                    {
                        "in": "query",
                        "name": "hashtags",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Hashtags"
                    },
                    {
                        "in": "query",
                        "name": "is_approved",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_featured",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_pinned",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "liked_by_user",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Liked by Current User"
                    },
                    {
                        "in": "query",
                        "name": "min_comments",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_likes",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_shares",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_views",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "post_type",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "achievement",
                                "article",
                                "image",
                                "job_share",
                                "poll",
                                "text",
                                "video"
                            ]
                        },
                        "description": "* `text` - Text\n* `image` - Image\n* `video` - Video\n* `article` - Article\n* `poll` - Poll\n* `job_share` - Job Share\n* `achievement` - Achievement"
                    },
                    {
                        "in": "query",
                        "name": "saved_by_user",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Saved by Current User"
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "shared_job",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "visibility",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "connections",
                                "private",
                                "public"
                            ]
                        },
                        "description": "* `public` - Public\n* `connections` - Connections Only\n* `private` - Private"
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedPostList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_feed_posts_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PostCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/{id}/": {
            "get": {
                "operationId": "api_feed_posts_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_feed_posts_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PostUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_feed_posts_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPostUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPostUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedPostUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PostUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_feed_posts_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/posts/{id}/like/": {
            "post": {
                "operationId": "api_feed_posts_like_create",
                "description": "Like or react to a post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/{id}/report/": {
            "post": {
                "operationId": "api_feed_posts_report_create",
                "description": "Report a post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/{id}/save/": {
            "post": {
                "operationId": "api_feed_posts_save_create",
                "description": "Save or unsave a post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_feed_posts_save_destroy",
                "description": "Save or unsave a post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/feed/posts/{id}/share/": {
            "post": {
                "operationId": "api_feed_posts_share_create",
                "description": "Share a post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/{post_id}/comments/": {
            "get": {
                "operationId": "api_feed_posts_comments_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "author",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "author_name",
                        "schema": {
                            "type": "string"
                        },
                        "description": "Author Name"
                    },
                    {
                        "in": "query",
                        "name": "created_after",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "created_before",
                        "schema": {
                            "type": "string",
                            "format": "date-time"
                        }
                    },
                    {
                        "in": "query",
                        "name": "has_image",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Has Image"
                    },
                    {
                        "in": "query",
                        "name": "is_approved",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_reply",
                        "schema": {
                            "type": "boolean"
                        },
                        "description": "Is Reply"
                    },
                    {
                        "in": "query",
                        "name": "is_reported",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_likes",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "min_replies",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "parent_comment",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "post",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "path",
                        "name": "post_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedCommentList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_feed_posts_comments_create",
                "parameters": [
                    {
                        "in": "path",
                        "name": "post_id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/CommentCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/CommentCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/feed/": {
            "get": {
                "operationId": "api_feed_posts_feed_retrieve",
                "description": "Get personalized feed for user",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/posts/trending/": {
            "get": {
                "operationId": "api_feed_posts_trending_retrieve",
                "description": "Get trending posts",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/saved-posts/": {
            "get": {
                "operationId": "api_feed_saved_posts_list",
                "description": "List saved posts",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedSavedPostList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/feed/saved-posts/{id}/": {
            "get": {
                "operationId": "api_feed_saved_posts_retrieve",
                "description": "Get a specific saved post",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this saved post.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/SavedPost"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/application-detail/{id}/": {
            "get": {
                "operationId": "api_jobs_application_detail_retrieve",
                "description": "View for updating job application status (for employers)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_jobs_application_detail_update",
                "description": "View for updating job application status (for employers)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_jobs_application_detail_partial_update",
                "description": "View for updating job application status (for employers)",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/applications/": {
            "get": {
                "operationId": "api_jobs_applications_list",
                "description": "List job applications",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobApplicationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_jobs_applications_create",
                "description": "Create a job application",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationCreate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationCreate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationCreate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationCreate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/applications/{id}/": {
            "get": {
                "operationId": "api_jobs_applications_retrieve",
                "description": "Get a specific job application",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job application.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplication"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_jobs_applications_update",
                "description": "Update a job application",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job application.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_jobs_applications_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job application.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplicationStatusUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplicationStatusUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_jobs_applications_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job application.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/jobs/applications/{id}/withdraw/": {
            "patch": {
                "operationId": "api_jobs_applications_withdraw_partial_update",
                "description": "Withdraw a job application",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplication"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplication"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobApplication"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobApplication"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/categories/": {
            "get": {
                "operationId": "api_jobs_categories_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobCategoryList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_jobs_categories_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/categories/{id}/": {
            "get": {
                "operationId": "api_jobs_categories_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job category.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_jobs_categories_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job category.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_jobs_categories_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job category.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCategory"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCategory"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCategory"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCategory"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_jobs_categories_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this job category.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/jobs/company-applications/": {
            "get": {
                "operationId": "api_jobs_company_applications_list",
                "description": "View for company admins to see applications for their jobs",
                "parameters": [
                    {
                        "in": "query",
                        "name": "job",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "status",
                        "schema": {
                            "type": "string",
                            "enum": [
                                "hired",
                                "interview_scheduled",
                                "interviewed",
                                "offer_extended",
                                "rejected",
                                "submitted",
                                "under_review",
                                "withdrawn"
                            ]
                        },
                        "description": "* `submitted` - Submitted\n* `under_review` - Under Review\n* `interview_scheduled` - Interview Scheduled\n* `interviewed` - Interviewed\n* `offer_extended` - Offer Extended\n* `hired` - Hired\n* `rejected` - Rejected\n* `withdrawn` - Withdrawn"
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobApplicationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/jobs/": {
            "get": {
                "operationId": "api_jobs_jobs_list",
                "parameters": [
                    {
                        "in": "query",
                        "name": "category",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "category_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company_id",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "company_name",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deadline_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "deadline_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "description__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "experience_level",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "associate",
                                    "director",
                                    "entry",
                                    "executive",
                                    "mid"
                                ]
                            }
                        },
                        "description": "* `entry` - Entry level\n* `associate` - Associate\n* `mid` - Mid-Senior level\n* `director` - Director\n* `executive` - Executive",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "industry",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_active",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "is_featured",
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "in": "query",
                        "name": "job_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "contract",
                                    "full_time",
                                    "internship",
                                    "part_time",
                                    "temporary",
                                    "volunteer"
                                ]
                            }
                        },
                        "description": "* `full_time` - Full-time\n* `part_time` - Part-time\n* `contract` - Contract\n* `internship` - Internship\n* `temporary` - Temporary\n* `volunteer` - Volunteer",
                        "explode": true,
                        "style": "form"
                    },
                    {
                        "in": "query",
                        "name": "location",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "page_size",
                        "required": false,
                        "in": "query",
                        "description": "Number of results to return per page.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "in": "query",
                        "name": "posted_after",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "posted_before",
                        "schema": {
                            "type": "string",
                            "format": "date"
                        }
                    },
                    {
                        "in": "query",
                        "name": "salary_max",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "salary_min",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "salary_range_max",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "in": "query",
                        "name": "salary_range_min",
                        "schema": {
                            "type": "number"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "skills",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "title__icontains",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "in": "query",
                        "name": "workplace_type",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string",
                                "enum": [
                                    "hybrid",
                                    "on_site",
                                    "remote"
                                ]
                            }
                        },
                        "description": "* `on_site` - On-site\n* `remote` - Remote\n* `hybrid` - Hybrid",
                        "explode": true,
                        "style": "form"
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedJobListList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_jobs_jobs_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCreateUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/jobs/{id}/": {
            "get": {
                "operationId": "api_jobs_jobs_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobDetail"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_jobs_jobs_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobCreateUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCreateUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_jobs_jobs_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCreateUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCreateUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedJobCreateUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobCreateUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_jobs_jobs_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/jobs/jobs/{id}/apply/": {
            "post": {
                "operationId": "api_jobs_jobs_apply_create",
                "description": "Apply for a job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/jobs/{id}/save/": {
            "post": {
                "operationId": "api_jobs_jobs_save_create",
                "description": "Save or unsave a job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/JobList"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_jobs_jobs_save_destroy",
                "description": "Save or unsave a job",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/jobs/jobs/my-posts/": {
            "get": {
                "operationId": "api_jobs_jobs_my_posts_retrieve",
                "description": "Get jobs posted by current user or jobs from companies they admin",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/jobs/recommended/": {
            "get": {
                "operationId": "api_jobs_jobs_recommended_retrieve",
                "description": "Get recommended jobs based on user profile",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/jobs/saved/": {
            "get": {
                "operationId": "api_jobs_jobs_saved_retrieve",
                "description": "Get saved jobs",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    },
                    {}
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/jobs/stats/": {
            "get": {
                "operationId": "api_jobs_stats_retrieve",
                "description": "Get job statistics for dashboard",
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/JobStats"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/education/": {
            "get": {
                "operationId": "api_users_education_list",
                "description": "List education entries for the current user",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedEducationList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_education_create",
                "description": "Create a new education entry",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Education"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/education/{id}/": {
            "get": {
                "operationId": "api_users_education_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this education.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Education"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_education_update",
                "description": "Update an education entry",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this education.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Education"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Education"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_education_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this education.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEducation"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEducation"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedEducation"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Education"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_education_destroy",
                "description": "Delete an education entry",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this education.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/experiences/": {
            "get": {
                "operationId": "api_users_experiences_list",
                "description": "List experiences for the current user",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedExperienceList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_experiences_create",
                "description": "Create a new experience",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experience"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/experiences/{id}/": {
            "get": {
                "operationId": "api_users_experiences_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this experience.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experience"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_experiences_update",
                "description": "Update an experience",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this experience.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/Experience"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experience"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_experiences_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this experience.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExperience"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExperience"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedExperience"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Experience"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_experiences_destroy",
                "description": "Delete an experience",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this experience.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/profile/{id}/": {
            "get": {
                "operationId": "api_users_profile_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/profile/update/": {
            "put": {
                "operationId": "api_users_profile_update_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_profile_update_partial_update",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/search/": {
            "get": {
                "operationId": "api_users_search_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserSearchList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/skills/": {
            "get": {
                "operationId": "api_users_skills_list",
                "description": "List skills for the current user",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserSkillList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_skills_create",
                "description": "Create a new skill",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSkill"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/skills/{id}/": {
            "get": {
                "operationId": "api_users_skills_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user skill.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSkill"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_skills_update",
                "description": "Update a skill",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user skill.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserSkill"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSkill"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_skills_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user skill.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserSkill"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserSkill"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserSkill"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserSkill"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_skills_destroy",
                "description": "Delete a skill",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this user skill.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        },
        "/api/users/users/": {
            "get": {
                "operationId": "api_users_users_list",
                "parameters": [
                    {
                        "name": "ordering",
                        "required": false,
                        "in": "query",
                        "description": "Which field to use when ordering the results.",
                        "schema": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "page",
                        "required": false,
                        "in": "query",
                        "description": "A page number within the paginated result set.",
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "search",
                        "required": false,
                        "in": "query",
                        "description": "A search term.",
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/PaginatedUserBasicList"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "post": {
                "operationId": "api_users_users_create",
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfile"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "201": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            }
        },
        "/api/users/users/{id}/": {
            "get": {
                "operationId": "api_users_users_retrieve",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfile"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "put": {
                "operationId": "api_users_users_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/UserProfileUpdate"
                            }
                        }
                    },
                    "required": true
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "patch": {
                "operationId": "api_users_users_partial_update",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "requestBody": {
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        },
                        "application/x-www-form-urlencoded": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "$ref": "#/components/schemas/PatchedUserProfileUpdate"
                            }
                        }
                    }
                },
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "200": {
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/UserProfileUpdate"
                                }
                            }
                        },
                        "description": ""
                    }
                }
            },
            "delete": {
                "operationId": "api_users_users_destroy",
                "parameters": [
                    {
                        "in": "path",
                        "name": "id",
                        "schema": {
                            "type": "integer"
                        },
                        "description": "A unique integer value identifying this User.",
                        "required": true
                    }
                ],
                "tags": [
                    "api"
                ],
                "security": [
                    {
                        "jwtAuth": []
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No response body"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "BlankEnum": {
                "enum": [
                    ""
                ]
            },
            "ChangePassword": {
                "type": "object",
                "properties": {
                    "old_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                },
                "required": [
                    "new_password",
                    "old_password"
                ]
            },
            "Comment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "parent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "likes_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "replies_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentLike"
                        },
                        "readOnly": true
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBasic"
                        },
                        "readOnly": true
                    },
                    "replies": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "readOnly": true
                    },
                    "user_has_liked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_reply": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "can_edit": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "can_delete": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "can_delete",
                    "can_edit",
                    "content",
                    "created_at",
                    "id",
                    "is_reply",
                    "likes",
                    "likes_count",
                    "mentioned_users",
                    "replies",
                    "replies_count",
                    "updated_at",
                    "user_has_liked"
                ]
            },
            "CommentCreate": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "parent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "content"
                ]
            },
            "CommentLike": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "user"
                ]
            },
            "Company": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string"
                    },
                    "industry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Industry"
                            }
                        ],
                        "readOnly": true
                    },
                    "headquarters": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "company_size": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompanySizeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "founded_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "follower_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "is_verified": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "industry",
                    "name",
                    "slug"
                ]
            },
            "CompanyBasic": {
                "type": "object",
                "description": "Basic company serializer for references in other models",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "industry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Industry"
                            }
                        ],
                        "readOnly": true
                    },
                    "company_size": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompanySizeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "headquarters": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "is_verified": {
                        "type": "boolean"
                    },
                    "follower_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    }
                },
                "required": [
                    "id",
                    "industry",
                    "name",
                    "slug"
                ]
            },
            "CompanyDetail": {
                "type": "object",
                "description": "Detailed company serializer for company profile pages",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string"
                    },
                    "industry": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Industry"
                            }
                        ],
                        "readOnly": true
                    },
                    "headquarters": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "company_size": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/CompanySizeEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "founded_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "website": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "logo": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "cover_image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "follower_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "is_verified": {
                        "type": "boolean"
                    },
                    "created_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "locations": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CompanyLocation"
                        },
                        "readOnly": true
                    },
                    "is_following": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "job_count": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "created_by",
                    "id",
                    "industry",
                    "is_following",
                    "job_count",
                    "locations",
                    "name",
                    "slug",
                    "updated_at"
                ]
            },
            "CompanyFollow": {
                "type": "object",
                "properties": {
                    "message": {
                        "type": "string"
                    }
                },
                "required": [
                    "message"
                ]
            },
            "CompanyLocation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "address": {
                        "type": "string"
                    },
                    "city": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "state": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "country": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "postal_code": {
                        "type": "string",
                        "maxLength": 20
                    },
                    "is_headquarters": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "address",
                    "city",
                    "country",
                    "id"
                ]
            },
            "CompanySizeEnum": {
                "enum": [
                    "1-10",
                    "11-50",
                    "51-200",
                    "201-500",
                    "501-1000",
                    "1001-5000",
                    "5001-10000",
                    "10000+"
                ],
                "type": "string",
                "description": "* `1-10` - 1-10 employees\n* `11-50` - 11-50 employees\n* `51-200` - 51-200 employees\n* `201-500` - 201-500 employees\n* `501-1000` - 501-1000 employees\n* `1001-5000` - 1001-5000 employees\n* `5001-10000` - 5001-10000 employees\n* `10000+` - 10000+ employees"
            },
            "CompanyStats": {
                "type": "object",
                "properties": {
                    "follower_count": {
                        "type": "integer"
                    },
                    "active_jobs": {
                        "type": "integer"
                    },
                    "total_jobs_posted": {
                        "type": "integer"
                    },
                    "company_size": {
                        "type": "string"
                    },
                    "founded_year": {
                        "type": "integer"
                    }
                },
                "required": [
                    "active_jobs",
                    "company_size",
                    "follower_count",
                    "founded_year",
                    "total_jobs_posted"
                ]
            },
            "Connection": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user1": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "user2": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "other_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "connection_request": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConnectionRequest"
                            }
                        ],
                        "readOnly": true
                    },
                    "interaction_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "last_interaction": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "connected_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "connected_at",
                    "connection_request",
                    "id",
                    "interaction_count",
                    "last_interaction",
                    "other_user",
                    "user1",
                    "user2"
                ]
            },
            "ConnectionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "receiver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConnectionRequestStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "responded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "receiver",
                    "responded_at",
                    "sender",
                    "status",
                    "updated_at"
                ]
            },
            "ConnectionRequestStatusEnum": {
                "enum": [
                    "pending",
                    "accepted",
                    "declined",
                    "withdrawn"
                ],
                "type": "string",
                "description": "* `pending` - Pending\n* `accepted` - Accepted\n* `declined` - Declined\n* `withdrawn` - Withdrawn"
            },
            "Education": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "school": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "degree": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "field_of_study": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "start_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "end_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "school",
                    "start_year",
                    "updated_at"
                ]
            },
            "Experience": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "is_current": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "company",
                    "created_at",
                    "id",
                    "start_date",
                    "title",
                    "updated_at"
                ]
            },
            "ExperienceLevelEnum": {
                "enum": [
                    "entry",
                    "associate",
                    "mid",
                    "director",
                    "executive"
                ],
                "type": "string",
                "description": "* `entry` - Entry level\n* `associate` - Associate\n* `mid` - Mid-Senior level\n* `director` - Director\n* `executive` - Executive"
            },
            "FeedAlgorithm": {
                "type": "object",
                "properties": {
                    "connection_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "engagement_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "recency_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "similarity_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "trending_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "show_promoted_content": {
                        "type": "boolean"
                    },
                    "show_job_posts": {
                        "type": "boolean"
                    },
                    "show_company_updates": {
                        "type": "boolean"
                    },
                    "show_achievement_posts": {
                        "type": "boolean"
                    },
                    "muted_users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBasic"
                        },
                        "readOnly": true
                    },
                    "muted_hashtags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Hashtag"
                        },
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "muted_hashtags",
                    "muted_users",
                    "updated_at"
                ]
            },
            "FeedAlgorithmUpdate": {
                "type": "object",
                "properties": {
                    "connection_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "engagement_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "recency_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "similarity_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "trending_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "show_promoted_content": {
                        "type": "boolean"
                    },
                    "show_job_posts": {
                        "type": "boolean"
                    },
                    "show_company_updates": {
                        "type": "boolean"
                    },
                    "show_achievement_posts": {
                        "type": "boolean"
                    },
                    "muted_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "muted_hashtags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "FeedStats": {
                "type": "object",
                "description": "Serializer for feed statistics",
                "properties": {
                    "posts_today": {
                        "type": "integer"
                    },
                    "posts_this_week": {
                        "type": "integer"
                    },
                    "total_likes_received": {
                        "type": "integer"
                    },
                    "total_comments_received": {
                        "type": "integer"
                    },
                    "total_shares_received": {
                        "type": "integer"
                    },
                    "engagement_rate": {
                        "type": "number",
                        "format": "double"
                    },
                    "top_performing_post": {
                        "$ref": "#/components/schemas/Post"
                    }
                },
                "required": [
                    "engagement_rate",
                    "posts_this_week",
                    "posts_today",
                    "top_performing_post",
                    "total_comments_received",
                    "total_likes_received",
                    "total_shares_received"
                ]
            },
            "FilterOptions": {
                "type": "object",
                "properties": {
                    "industries": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "company_sizes": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "company_sizes",
                    "industries"
                ]
            },
            "Follow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "follower": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "following": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "follower",
                    "following",
                    "id"
                ]
            },
            "Hashtag": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "posts_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": 0
                    },
                    "is_trending": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "Industry": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "name"
                ]
            },
            "JobApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "job": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobList"
                            }
                        ],
                        "readOnly": true
                    },
                    "applicant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "cover_letter": {
                        "type": "string"
                    },
                    "resume": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobApplicationStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "applied_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "applicant",
                    "applied_date",
                    "id",
                    "job",
                    "status",
                    "status_updated_at"
                ]
            },
            "JobApplicationCreate": {
                "type": "object",
                "properties": {
                    "job_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "cover_letter": {
                        "type": "string"
                    },
                    "resume": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    }
                },
                "required": [
                    "job_id"
                ]
            },
            "JobApplicationStatusEnum": {
                "enum": [
                    "submitted",
                    "under_review",
                    "interview_scheduled",
                    "interviewed",
                    "offer_extended",
                    "hired",
                    "rejected",
                    "withdrawn"
                ],
                "type": "string",
                "description": "* `submitted` - Submitted\n* `under_review` - Under Review\n* `interview_scheduled` - Interview Scheduled\n* `interviewed` - Interviewed\n* `offer_extended` - Offer Extended\n* `hired` - Hired\n* `rejected` - Rejected\n* `withdrawn` - Withdrawn"
            },
            "JobApplicationStatusUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/JobApplicationStatusEnum"
                    }
                }
            },
            "JobBasic": {
                "type": "object",
                "description": "Lightweight job serializer for use in other serializers",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "company_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "company_logo": {
                        "type": "string",
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "experience_level": {
                        "$ref": "#/components/schemas/ExperienceLevelEnum"
                    }
                },
                "required": [
                    "company_logo",
                    "company_name",
                    "experience_level",
                    "id",
                    "job_type",
                    "location",
                    "title"
                ]
            },
            "JobCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string"
                    }
                },
                "required": [
                    "id",
                    "name",
                    "slug"
                ]
            },
            "JobCreateUpdate": {
                "type": "object",
                "description": "Serializer for creating and updating jobs",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "requirements": {
                        "type": "string"
                    },
                    "responsibilities": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "workplace_type": {
                        "$ref": "#/components/schemas/WorkplaceTypeEnum"
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "experience_level": {
                        "$ref": "#/components/schemas/ExperienceLevelEnum"
                    },
                    "category_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "salary_min": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_max": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_currency": {
                        "type": "string",
                        "maxLength": 3
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "skills_required_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "writeOnly": true
                    },
                    "skills_preferred_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "writeOnly": true
                    },
                    "application_deadline": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                },
                "required": [
                    "company_id",
                    "description",
                    "experience_level",
                    "job_type",
                    "location",
                    "title"
                ]
            },
            "JobDetail": {
                "type": "object",
                "description": "Detailed serializer for single job view",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string"
                    },
                    "requirements": {
                        "type": "string"
                    },
                    "responsibilities": {
                        "type": "string"
                    },
                    "company": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompanyBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "workplace_type": {
                        "$ref": "#/components/schemas/WorkplaceTypeEnum"
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "experience_level": {
                        "$ref": "#/components/schemas/ExperienceLevelEnum"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        ],
                        "readOnly": true
                    },
                    "salary_min": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_max": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_currency": {
                        "type": "string",
                        "maxLength": 3
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "salary_range": {
                        "type": "string",
                        "readOnly": true
                    },
                    "skills_required": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Skill"
                        },
                        "readOnly": true
                    },
                    "skills_preferred": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Skill"
                        },
                        "readOnly": true
                    },
                    "is_active": {
                        "type": "boolean"
                    },
                    "is_featured": {
                        "type": "boolean"
                    },
                    "posted_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "application_deadline": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "view_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "application_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_saved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "has_applied": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "category",
                    "company",
                    "created_at",
                    "description",
                    "experience_level",
                    "has_applied",
                    "id",
                    "is_saved",
                    "job_type",
                    "location",
                    "posted_by",
                    "salary_range",
                    "skills_preferred",
                    "skills_required",
                    "slug",
                    "title",
                    "updated_at"
                ]
            },
            "JobList": {
                "type": "object",
                "description": "Serializer for job listings and search results",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "slug": {
                        "type": "string",
                        "maxLength": 50,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "company": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/CompanyBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "workplace_type": {
                        "$ref": "#/components/schemas/WorkplaceTypeEnum"
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "experience_level": {
                        "$ref": "#/components/schemas/ExperienceLevelEnum"
                    },
                    "category": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobCategory"
                            }
                        ],
                        "readOnly": true
                    },
                    "salary_min": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_max": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_currency": {
                        "type": "string",
                        "maxLength": 3
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "skills_required": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Skill"
                        },
                        "readOnly": true
                    },
                    "is_featured": {
                        "type": "boolean"
                    },
                    "posted_by": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "application_deadline": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    },
                    "view_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "application_count": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "is_saved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "has_applied": {
                        "type": "boolean",
                        "readOnly": true
                    }
                },
                "required": [
                    "category",
                    "company",
                    "created_at",
                    "experience_level",
                    "has_applied",
                    "id",
                    "is_saved",
                    "job_type",
                    "location",
                    "posted_by",
                    "skills_required",
                    "slug",
                    "title"
                ]
            },
            "JobStats": {
                "type": "object",
                "properties": {
                    "total_jobs": {
                        "type": "integer"
                    },
                    "active_jobs": {
                        "type": "integer"
                    },
                    "total_applications": {
                        "type": "integer"
                    },
                    "applications_by_status": {
                        "type": "object",
                        "additionalProperties": {
                            "type": "integer"
                        }
                    },
                    "recent_applications": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobApplication"
                        }
                    }
                },
                "required": [
                    "active_jobs",
                    "applications_by_status",
                    "recent_applications",
                    "total_applications",
                    "total_jobs"
                ]
            },
            "JobTypeEnum": {
                "enum": [
                    "full_time",
                    "part_time",
                    "contract",
                    "internship",
                    "temporary",
                    "volunteer"
                ],
                "type": "string",
                "description": "* `full_time` - Full-time\n* `part_time` - Part-time\n* `contract` - Contract\n* `internship` - Internship\n* `temporary` - Temporary\n* `volunteer` - Volunteer"
            },
            "NetworkMetrics": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "connection_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "follower_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "following_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "mutual_connection_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "industry_connection_percentage": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "profile_views_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "search_appearances_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "post_engagement_rate": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "avg_connections_per_month": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "last_calculated": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "avg_connections_per_month",
                    "connection_count",
                    "follower_count",
                    "following_count",
                    "id",
                    "industry_connection_percentage",
                    "last_calculated",
                    "mutual_connection_count",
                    "post_engagement_rate",
                    "profile_views_count",
                    "search_appearances_count",
                    "user"
                ]
            },
            "Notification": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "notification_type": {
                        "$ref": "#/components/schemas/NotificationTypeEnum"
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "message": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "is_read": {
                        "type": "boolean"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "action_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "post": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    },
                    "comment": {
                        "type": "object",
                        "additionalProperties": {},
                        "readOnly": true
                    }
                },
                "required": [
                    "comment",
                    "created_at",
                    "id",
                    "notification_type",
                    "post",
                    "sender"
                ]
            },
            "NotificationTypeEnum": {
                "enum": [
                    "like",
                    "comment",
                    "share",
                    "follow",
                    "mention",
                    "job_application",
                    "connection_request",
                    "post_approved",
                    "system"
                ],
                "type": "string",
                "description": "* `like` - Post Like\n* `comment` - Comment\n* `share` - Post Share\n* `follow` - New Follower\n* `mention` - Mention\n* `job_application` - Job Application\n* `connection_request` - Connection Request\n* `post_approved` - Post Approved\n* `system` - System Notification"
            },
            "PaginatedCommentList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        }
                    }
                }
            },
            "PaginatedCompanyList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Company"
                        }
                    }
                }
            },
            "PaginatedConnectionList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Connection"
                        }
                    }
                }
            },
            "PaginatedConnectionRequestList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/ConnectionRequest"
                        }
                    }
                }
            },
            "PaginatedEducationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Education"
                        }
                    }
                }
            },
            "PaginatedExperienceList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Experience"
                        }
                    }
                }
            },
            "PaginatedFeedAlgorithmList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/FeedAlgorithm"
                        }
                    }
                }
            },
            "PaginatedFollowList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Follow"
                        }
                    }
                }
            },
            "PaginatedHashtagList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Hashtag"
                        }
                    }
                }
            },
            "PaginatedJobApplicationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobApplication"
                        }
                    }
                }
            },
            "PaginatedJobCategoryList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobCategory"
                        }
                    }
                }
            },
            "PaginatedJobListList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/JobList"
                        }
                    }
                }
            },
            "PaginatedNetworkMetricsList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/NetworkMetrics"
                        }
                    }
                }
            },
            "PaginatedNotificationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Notification"
                        }
                    }
                }
            },
            "PaginatedPostList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Post"
                        }
                    }
                }
            },
            "PaginatedSavedPostList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/SavedPost"
                        }
                    }
                }
            },
            "PaginatedUserBasicList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBasic"
                        }
                    }
                }
            },
            "PaginatedUserRecommendationList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserRecommendation"
                        }
                    }
                }
            },
            "PaginatedUserSearchList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSearch"
                        }
                    }
                }
            },
            "PaginatedUserSkillList": {
                "type": "object",
                "properties": {
                    "count": {
                        "type": "integer",
                        "example": 123
                    },
                    "next": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=4"
                    },
                    "previous": {
                        "type": "string",
                        "nullable": true,
                        "format": "uri",
                        "example": "http://api.example.org/accounts/?page=2"
                    },
                    "results": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSkill"
                        }
                    }
                }
            },
            "PatchedChangePassword": {
                "type": "object",
                "properties": {
                    "old_password": {
                        "type": "string"
                    },
                    "new_password": {
                        "type": "string"
                    }
                }
            },
            "PatchedComment": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 1000
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "parent": {
                        "type": "integer",
                        "nullable": true
                    },
                    "likes_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "replies_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/CommentLike"
                        },
                        "readOnly": true
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBasic"
                        },
                        "readOnly": true
                    },
                    "replies": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "readOnly": true
                    },
                    "user_has_liked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_reply": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "can_edit": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "can_delete": {
                        "type": "boolean",
                        "readOnly": true
                    }
                }
            },
            "PatchedConnectionRequest": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "sender": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "receiver": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "message": {
                        "type": "string"
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/ConnectionRequestStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "responded_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    }
                }
            },
            "PatchedEducation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "school": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "degree": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "field_of_study": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "start_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648
                    },
                    "end_year": {
                        "type": "integer",
                        "maximum": 2147483647,
                        "minimum": -2147483648,
                        "nullable": true
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedExperience": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "title": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "company": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "start_date": {
                        "type": "string",
                        "format": "date"
                    },
                    "end_date": {
                        "type": "string",
                        "format": "date",
                        "nullable": true
                    },
                    "is_current": {
                        "type": "boolean"
                    },
                    "description": {
                        "type": "string"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedFeedAlgorithmUpdate": {
                "type": "object",
                "properties": {
                    "connection_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "engagement_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "recency_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "similarity_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "trending_weight": {
                        "type": "number",
                        "format": "double"
                    },
                    "show_promoted_content": {
                        "type": "boolean"
                    },
                    "show_job_posts": {
                        "type": "boolean"
                    },
                    "show_company_updates": {
                        "type": "boolean"
                    },
                    "show_achievement_posts": {
                        "type": "boolean"
                    },
                    "muted_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "muted_hashtags": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedFollow": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "follower": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "following": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedJobApplication": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "job": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobList"
                            }
                        ],
                        "readOnly": true
                    },
                    "applicant": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "cover_letter": {
                        "type": "string"
                    },
                    "resume": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "portfolio_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "status": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobApplicationStatusEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "applied_date": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "status_updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "PatchedJobApplicationStatusUpdate": {
                "type": "object",
                "properties": {
                    "status": {
                        "$ref": "#/components/schemas/JobApplicationStatusEnum"
                    }
                }
            },
            "PatchedJobCategory": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "slug": {
                        "type": "string",
                        "readOnly": true,
                        "pattern": "^[-a-zA-Z0-9_]+$"
                    },
                    "description": {
                        "type": "string"
                    }
                }
            },
            "PatchedJobCreateUpdate": {
                "type": "object",
                "description": "Serializer for creating and updating jobs",
                "properties": {
                    "title": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "description": {
                        "type": "string"
                    },
                    "requirements": {
                        "type": "string"
                    },
                    "responsibilities": {
                        "type": "string"
                    },
                    "company_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "workplace_type": {
                        "$ref": "#/components/schemas/WorkplaceTypeEnum"
                    },
                    "job_type": {
                        "$ref": "#/components/schemas/JobTypeEnum"
                    },
                    "experience_level": {
                        "$ref": "#/components/schemas/ExperienceLevelEnum"
                    },
                    "category_id": {
                        "type": "integer",
                        "writeOnly": true
                    },
                    "salary_min": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_max": {
                        "type": "string",
                        "format": "decimal",
                        "pattern": "^-?\\d{0,8}(?:\\.\\d{0,2})?$",
                        "nullable": true
                    },
                    "salary_currency": {
                        "type": "string",
                        "maxLength": 3
                    },
                    "salary_type": {
                        "$ref": "#/components/schemas/SalaryTypeEnum"
                    },
                    "skills_required_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "writeOnly": true
                    },
                    "skills_preferred_names": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 50
                        },
                        "writeOnly": true
                    },
                    "application_deadline": {
                        "type": "string",
                        "format": "date-time",
                        "nullable": true
                    }
                }
            },
            "PatchedPostUpdate": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/VisibilityEnum"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "video": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "document": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "article_title": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "article_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "article_description": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "article_image": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "hashtags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                }
            },
            "PatchedUserProfileUpdate": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "headline": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "summary": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "profile_picture": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "current_position": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "industry": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "experience_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ExperienceLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "privacy_public_profile": {
                        "type": "boolean"
                    },
                    "privacy_show_connections": {
                        "type": "boolean"
                    }
                }
            },
            "PatchedUserSkill": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "skill": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Skill"
                            }
                        ],
                        "readOnly": true
                    },
                    "skill_name": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "endorsement_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                }
            },
            "Post": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "author": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "content": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "post_type": {
                        "$ref": "#/components/schemas/PostTypeEnum"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/VisibilityEnum"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "video": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "document": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "article_title": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "article_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "article_description": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "article_image": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "shared_job": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/JobBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "likes_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "comments_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "shares_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "views_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "is_pinned": {
                        "type": "boolean"
                    },
                    "is_featured": {
                        "type": "boolean"
                    },
                    "hashtags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Hashtag"
                        },
                        "readOnly": true
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserBasic"
                        },
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "likes": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostLike"
                        },
                        "readOnly": true
                    },
                    "comments": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Comment"
                        },
                        "readOnly": true
                    },
                    "shares": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/PostShare"
                        },
                        "readOnly": true
                    },
                    "user_has_liked": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "user_has_shared": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "user_has_saved": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "user_reaction_type": {
                        "type": "string",
                        "readOnly": true
                    },
                    "can_edit": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "can_delete": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "time_since_posted": {
                        "type": "string",
                        "readOnly": true
                    },
                    "top_comments": {
                        "type": "array",
                        "items": {
                            "type": "object",
                            "additionalProperties": {}
                        },
                        "readOnly": true
                    },
                    "engagement_score": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "engagement_rate": {
                        "type": "number",
                        "format": "double",
                        "description": "Calculate engagement rate as percentage",
                        "readOnly": true
                    }
                },
                "required": [
                    "author",
                    "can_delete",
                    "can_edit",
                    "comments",
                    "comments_count",
                    "content",
                    "created_at",
                    "engagement_rate",
                    "engagement_score",
                    "hashtags",
                    "id",
                    "likes",
                    "likes_count",
                    "mentioned_users",
                    "shared_job",
                    "shares",
                    "shares_count",
                    "time_since_posted",
                    "top_comments",
                    "updated_at",
                    "user_has_liked",
                    "user_has_saved",
                    "user_has_shared",
                    "user_reaction_type",
                    "views_count"
                ]
            },
            "PostCreate": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "post_type": {
                        "$ref": "#/components/schemas/PostTypeEnum"
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/VisibilityEnum"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "video": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "document": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "article_title": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "article_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "article_description": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "article_image": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "hashtags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    },
                    "shared_job_id": {
                        "type": "integer",
                        "nullable": true
                    }
                },
                "required": [
                    "content"
                ]
            },
            "PostLike": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "reaction_type": {
                        "$ref": "#/components/schemas/ReactionTypeEnum"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "user"
                ]
            },
            "PostShare": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "share_content": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "id",
                    "user"
                ]
            },
            "PostTypeEnum": {
                "enum": [
                    "text",
                    "image",
                    "video",
                    "article",
                    "poll",
                    "job_share",
                    "achievement"
                ],
                "type": "string",
                "description": "* `text` - Text\n* `image` - Image\n* `video` - Video\n* `article` - Article\n* `poll` - Poll\n* `job_share` - Job Share\n* `achievement` - Achievement"
            },
            "PostUpdate": {
                "type": "object",
                "properties": {
                    "content": {
                        "type": "string",
                        "maxLength": 3000
                    },
                    "visibility": {
                        "$ref": "#/components/schemas/VisibilityEnum"
                    },
                    "image": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "video": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "document": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "article_title": {
                        "type": "string",
                        "maxLength": 300
                    },
                    "article_url": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "article_description": {
                        "type": "string",
                        "maxLength": 500
                    },
                    "article_image": {
                        "type": "string",
                        "format": "uri",
                        "maxLength": 200
                    },
                    "hashtags": {
                        "type": "array",
                        "items": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    "mentioned_users": {
                        "type": "array",
                        "items": {
                            "type": "integer"
                        }
                    }
                },
                "required": [
                    "content"
                ]
            },
            "ReactionTypeEnum": {
                "enum": [
                    "like",
                    "love",
                    "laugh",
                    "wow",
                    "sad",
                    "angry",
                    "celebrate",
                    "support"
                ],
                "type": "string",
                "description": "* `like` - 👍 Like\n* `love` - ❤️ Love\n* `laugh` - 😂 Laugh\n* `wow` - 😮 Wow\n* `sad` - 😢 Sad\n* `angry` - 😠 Angry\n* `celebrate` - 🎉 Celebrate\n* `support` - 🤝 Support"
            },
            "RecommendationTypeEnum": {
                "enum": [
                    "mutual_connections",
                    "same_company",
                    "same_school",
                    "similar_skills",
                    "location_based",
                    "industry_based",
                    "email_contact"
                ],
                "type": "string",
                "description": "* `mutual_connections` - Mutual Connections\n* `same_company` - Same Company\n* `same_school` - Same School\n* `similar_skills` - Similar Skills\n* `location_based` - Location Based\n* `industry_based` - Industry Based\n* `email_contact` - Email Contact"
            },
            "SalaryTypeEnum": {
                "enum": [
                    "hourly",
                    "daily",
                    "monthly",
                    "yearly"
                ],
                "type": "string",
                "description": "* `hourly` - Hourly\n* `daily` - Daily\n* `monthly` - Monthly\n* `yearly` - Yearly"
            },
            "SavedPost": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "post": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Post"
                            }
                        ],
                        "readOnly": true
                    },
                    "saved_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "id",
                    "post",
                    "saved_at"
                ]
            },
            "Skill": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "name": {
                        "type": "string",
                        "maxLength": 50
                    }
                },
                "required": [
                    "id",
                    "name"
                ]
            },
            "TokenRefresh": {
                "type": "object",
                "properties": {
                    "access": {
                        "type": "string",
                        "readOnly": true
                    },
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "access",
                    "refresh"
                ]
            },
            "TrendingTopics": {
                "type": "object",
                "description": "Serializer for trending topics response",
                "properties": {
                    "hashtags": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Hashtag"
                        }
                    },
                    "topics": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    "user_interests": {
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                },
                "required": [
                    "hashtags",
                    "topics",
                    "user_interests"
                ]
            },
            "UserBasic": {
                "type": "object",
                "description": "Lightweight user serializer for use in other serializers",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "headline": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "current_position": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "profile_picture_url": {
                        "type": "string",
                        "readOnly": true
                    }
                },
                "required": [
                    "first_name",
                    "full_name",
                    "id",
                    "last_name",
                    "profile_picture_url"
                ]
            },
            "UserLogin": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "required": [
                    "email",
                    "password"
                ]
            },
            "UserLogout": {
                "type": "object",
                "properties": {
                    "refresh": {
                        "type": "string"
                    }
                },
                "required": [
                    "refresh"
                ]
            },
            "UserProfile": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "readOnly": true
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "initials": {
                        "type": "string",
                        "readOnly": true
                    },
                    "headline": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "summary": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "profile_picture": {
                        "type": "string",
                        "readOnly": true
                    },
                    "current_position": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "industry": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "experience_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ExperienceLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "is_verified": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_company_user": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "privacy_public_profile": {
                        "type": "boolean"
                    },
                    "privacy_show_connections": {
                        "type": "boolean"
                    },
                    "date_joined": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    },
                    "experiences": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Experience"
                        },
                        "readOnly": true
                    },
                    "education": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/Education"
                        },
                        "readOnly": true
                    },
                    "user_skills": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/UserSkill"
                        },
                        "readOnly": true
                    }
                },
                "required": [
                    "date_joined",
                    "education",
                    "email",
                    "experiences",
                    "first_name",
                    "full_name",
                    "id",
                    "initials",
                    "is_company_user",
                    "is_verified",
                    "last_name",
                    "profile_picture",
                    "user_skills"
                ]
            },
            "UserProfileUpdate": {
                "type": "object",
                "properties": {
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "headline": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "summary": {
                        "type": "string"
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "profile_picture": {
                        "type": "string",
                        "format": "uri",
                        "nullable": true
                    },
                    "current_position": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "industry": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "experience_level": {
                        "oneOf": [
                            {
                                "$ref": "#/components/schemas/ExperienceLevelEnum"
                            },
                            {
                                "$ref": "#/components/schemas/BlankEnum"
                            }
                        ]
                    },
                    "privacy_public_profile": {
                        "type": "boolean"
                    },
                    "privacy_show_connections": {
                        "type": "boolean"
                    }
                },
                "required": [
                    "first_name",
                    "last_name"
                ]
            },
            "UserRecommendation": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "recommended_user": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/UserBasic"
                            }
                        ],
                        "readOnly": true
                    },
                    "recommendation_type": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/RecommendationTypeEnum"
                            }
                        ],
                        "readOnly": true
                    },
                    "score": {
                        "type": "number",
                        "format": "double",
                        "readOnly": true
                    },
                    "is_dismissed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "is_viewed": {
                        "type": "boolean",
                        "readOnly": true
                    },
                    "viewed_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "dismissed_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true,
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "dismissed_at",
                    "id",
                    "is_dismissed",
                    "is_viewed",
                    "recommendation_type",
                    "recommended_user",
                    "score",
                    "user",
                    "viewed_at"
                ]
            },
            "UserRegistration": {
                "type": "object",
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email",
                        "maxLength": 254
                    },
                    "first_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "last_name": {
                        "type": "string",
                        "maxLength": 30
                    },
                    "password": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "password_confirm": {
                        "type": "string",
                        "writeOnly": true
                    }
                },
                "required": [
                    "email",
                    "first_name",
                    "last_name",
                    "password",
                    "password_confirm"
                ]
            },
            "UserSearch": {
                "type": "object",
                "description": "Serializer for user search results",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "full_name": {
                        "type": "string",
                        "readOnly": true
                    },
                    "initials": {
                        "type": "string",
                        "readOnly": true
                    },
                    "headline": {
                        "type": "string",
                        "maxLength": 200
                    },
                    "current_position": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "location": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "profile_picture": {
                        "type": "string",
                        "readOnly": true
                    },
                    "industry": {
                        "type": "string",
                        "maxLength": 100
                    },
                    "is_verified": {
                        "type": "boolean"
                    },
                    "mutual_connections_count": {
                        "type": "integer",
                        "readOnly": true
                    }
                },
                "required": [
                    "full_name",
                    "id",
                    "initials",
                    "mutual_connections_count",
                    "profile_picture"
                ]
            },
            "UserSkill": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "skill": {
                        "allOf": [
                            {
                                "$ref": "#/components/schemas/Skill"
                            }
                        ],
                        "readOnly": true
                    },
                    "skill_name": {
                        "type": "string",
                        "writeOnly": true
                    },
                    "endorsement_count": {
                        "type": "integer",
                        "readOnly": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "readOnly": true
                    }
                },
                "required": [
                    "created_at",
                    "endorsement_count",
                    "id",
                    "skill",
                    "skill_name"
                ]
            },
            "VisibilityEnum": {
                "enum": [
                    "public",
                    "connections",
                    "private"
                ],
                "type": "string",
                "description": "* `public` - Public\n* `connections` - Connections Only\n* `private` - Private"
            },
            "WorkplaceTypeEnum": {
                "enum": [
                    "on_site",
                    "remote",
                    "hybrid"
                ],
                "type": "string",
                "description": "* `on_site` - On-site\n* `remote` - Remote\n* `hybrid` - Hybrid"
            }
        },
        "securitySchemes": {
            "jwtAuth": {
                "type": "http",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}